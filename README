OVERVIEW

The purpose of the Arch Decision plugin for Redmine is to allow teams to collaborate on project decisions (primarily technical ones), 
to encourage explicit statements of assumptions and prioritizations, and to provide tracking after the decision has been made so that
teams can have a collective memory as to how decisions were made in the past.

VERSION: 0.0.9 

RELEASE NOTES

* Bug #598 - Labels missing for Redmine 0.9.2
* Feature #596 - Add support for Redmine version 0.9: The plugin is now compatible with Redmine "trunk" (0.9.2). A separate branch has been created for the 0.8.4-compatible version.

CURRENT FEATURES

* List Arch Decisions (currently only manually, via the /arch_decisions URL)
* List Factors (currently only manually, via the /factors URL)
* CRUD Arch Decisions (with only basic info)
* CRUD Factors (with only basic info)
* Associate Factors with ADs, and remove associations
* Reorder factor priorities for each AD
* List and CRUD Arch Decision Strategies
* Arch Decisions, Factors and Strategies each have their own Discussion section
* Project members and watchers receive email notifications for significant Arch Decision events 
* Simple security model (using Redmine security) for enabling the creation and modification of ADs and related entities
* Can link ADs to Issues

ROADMAP

* Allow tagging of ADs and Factors for easy and flexible categorization and search
* Enable full-fledged search across all model types
* Allow changes to ADs to show up in the Activity list

KNOWN ISSUES

Note: there is now an official issue tracker for this plug-in. Please refer to http://opensource.integritas.com.br/projects/redmine-ad/issues for the complete list.

  ################################
  # Issue #1
  # [timothy.high@gmail.com] 
  # There is a problem in development mode with classes reloading / not reloading
  # It shows up as errors in the web page such as:
  #   Project(#51730400) expected, got Project(#50128210)
  # For more information, see http://dev.rubyonrails.org/ticket/8246
  ################################
  
  A number of solutions are recommended in the ticket above. Of all the ones recommended (there are several changes to environment.rb), the only one
  that worked was to patch association_proxy.rb. For more info, see:
  http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/d2adc451ff0236c2/b95a3bc9cb97f988?#b95a3bc9cb97f988
  
  UPDATE: Unfortunately, this hasn't solved the problem. It seems that not only have the exact class representation changed, but whole
  methods have gone missing from the newly loaded versions! The only workaround left for me has been to run my local server in production mode.
  
